--create-table
aws dynamodb create-table --table-name MusicCollection --attribute-definitions AttributeName=Artist,AttributeType=S AttributeName=SongTitle,AttributeType=S --key-schema AttributeName=Artist,KeyType=HASH AttributeName=SongTitle,KeyType=RANGE --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5

--put-item
aws dynamodb put-item --table-name MusicCollection --item file://item.json --return-consumed-capacity TOTAL

{
    "Artist": {"S": "No One You Know"},
    "SongTitle": {"S": "Call Me Today"},
    "AlbumTitle": {"S": "Somewhat Famous"}
}

-- update-item
aws dynamodb update-item --table-name MusicCollection --key file://key.json --update-expression "SET #Y = :y, #AT = :t" --expression-attribute-names file://expression-attribute-names.json --expression-attribute-values file://expression-attribute-values.json  --return-values ALL_NEW

--get-item
aws dynamodb get-item --table-name MusicCollection --key file://key.json

-- batch-get-item
aws dynamodb batch-get-item --request-items file://request-items.json

-- batch-write-item
aws dynamodb batch-write-item --request-items file://write-items.json

-- batch-write-item --------- Delete batch items
aws dynamodb batch-write-item --request-items file://Delete-items.json

-- delete-item
aws dynamodb delete-item --table-name MusicCollection --key file://key.json


-- Scan
aws dynamodb scan --table-name MusicCollection --filter-expression "Artist = :a" --projection-expression "#ST, #AT" --expression-attribute-names file://expression-attribute-names_scan.json --expression-attribute-values file://expression-attribute-values_scan.json

-- query
aws dynamodb query --table-name MusicCollection --projection-expression "SongTitle" --key-condition-expression "Artist = :v1" --expression-attribute-values file://expression-attributes.json
